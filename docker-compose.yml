# docker-compose.yml (pour votre Nginx Reverse Proxy principal)

services:
  nginx:
    image: nginx
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./config/nginx/sites.conf:/etc/nginx/conf.d/default.conf
      # Nouveaux volumes pour les sites statiques :
      - ./francoisgleyze_content/:/www/francoisgleyze_content # Pour francoisgleyze.com
      - ./mar_content/:/www/mar_content                     # Pour accompagnement-renovation.fr
      # Volumes pour Let's Encrypt (inchangés) :
      - ./data/letsencrypt/etc:/etc/letsencrypt
      - ./data/letsencrypt/www:/var/www/certbot
      - ./data/letsencrypt/log:/var/log/letsencrypt
    restart: always
    networks: # Le service nginx est connecté au réseau gleyze
      default: # 'default' ici réfère au réseau 'gleyze' défini ci-dessous
        # Vous pouvez aussi nommer explicitement les réseaux ici si vous en avez plusieurs
        # networks:
        #  - gleyze_net <- si vous renommez la clé sous 'networks:'

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/letsencrypt/etc:/etc/letsencrypt
      - ./data/letsencrypt/www:/var/www/certbot
      - ./data/letsencrypt/log:/var/log/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --quiet; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped
    # Certbot n'a pas besoin d'être sur le réseau gleyze directement,
    # il interagit via les volumes partagés avec Nginx.

networks:
  default: # Ce 'default' est le nom interne à ce docker-compose pour le réseau externe 'gleyze'
    name: gleyze # Assure la connexion au réseau externe nommé 'gleyze'
    external: true